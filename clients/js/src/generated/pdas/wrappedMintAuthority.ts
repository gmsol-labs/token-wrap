/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  getAddressEncoder,
  getProgramDerivedAddress,
  getUtf8Encoder,
  type Address,
  type ProgramDerivedAddress,
} from '@solana/kit';

export type WrappedMintAuthoritySeeds = {
  wrappedMint: Address;
};

export async function findWrappedMintAuthorityPda(
  seeds: WrappedMintAuthoritySeeds,
  config: { programAddress?: Address | undefined } = {}
): Promise<ProgramDerivedAddress> {
  const {
    programAddress = '12cJKgP9r2bcaruqu3XsCS1hxLqsHrmZhqG5Qy2TWRap' as Address<'12cJKgP9r2bcaruqu3XsCS1hxLqsHrmZhqG5Qy2TWRap'>,
  } = config;
  return await getProgramDerivedAddress({
    programAddress,
    seeds: [
      getUtf8Encoder().encode('authority'),
      getAddressEncoder().encode(seeds.wrappedMint),
    ],
  });
}
