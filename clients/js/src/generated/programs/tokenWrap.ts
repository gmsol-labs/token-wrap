/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  containsBytes,
  getU8Encoder,
  type Address,
  type ReadonlyUint8Array,
} from '@solana/kit';
import {
  type ParsedCloseStuckEscrowInstruction,
  type ParsedCreateMintInstruction,
  type ParsedUnwrapInstruction,
  type ParsedWrapInstruction,
} from '../instructions';

export const TOKEN_WRAP_PROGRAM_ADDRESS =
  '12cJKgP9r2bcaruqu3XsCS1hxLqsHrmZhqG5Qy2TWRap' as Address<'12cJKgP9r2bcaruqu3XsCS1hxLqsHrmZhqG5Qy2TWRap'>;

export enum TokenWrapAccount {
  Backpointer,
}

export enum TokenWrapInstruction {
  CreateMint,
  Wrap,
  Unwrap,
  CloseStuckEscrow,
}

export function identifyTokenWrapInstruction(
  instruction: { data: ReadonlyUint8Array } | ReadonlyUint8Array
): TokenWrapInstruction {
  const data = 'data' in instruction ? instruction.data : instruction;
  if (containsBytes(data, getU8Encoder().encode(0), 0)) {
    return TokenWrapInstruction.CreateMint;
  }
  if (containsBytes(data, getU8Encoder().encode(1), 0)) {
    return TokenWrapInstruction.Wrap;
  }
  if (containsBytes(data, getU8Encoder().encode(2), 0)) {
    return TokenWrapInstruction.Unwrap;
  }
  if (containsBytes(data, getU8Encoder().encode(3), 0)) {
    return TokenWrapInstruction.CloseStuckEscrow;
  }
  throw new Error(
    'The provided instruction could not be identified as a tokenWrap instruction.'
  );
}

export type ParsedTokenWrapInstruction<
  TProgram extends string = '12cJKgP9r2bcaruqu3XsCS1hxLqsHrmZhqG5Qy2TWRap',
> =
  | ({
      instructionType: TokenWrapInstruction.CreateMint;
    } & ParsedCreateMintInstruction<TProgram>)
  | ({
      instructionType: TokenWrapInstruction.Wrap;
    } & ParsedWrapInstruction<TProgram>)
  | ({
      instructionType: TokenWrapInstruction.Unwrap;
    } & ParsedUnwrapInstruction<TProgram>)
  | ({
      instructionType: TokenWrapInstruction.CloseStuckEscrow;
    } & ParsedCloseStuckEscrowInstruction<TProgram>);
